name: "Ecommerce-app"
on:
  push:
    branches:
      - main
      - test
    paths:
      - ecommerce-app/**
  pull_request:
    branches:
      - main
    paths:
      - ecommerce-app/**

env:
  AWS_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_db_username: ${{ secrets.RDS_USER_NAME }}
  TF_VAR_db_password: ${{ secrets.RDS_PASSWORD }}

jobs:
  wait_for_infra:
    name: "Waiting for infrastructure to be ready"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: infra-status

      - name: Check marker
        id: check_infra
        run: |
          if [[ -f infra.txt ]]; then
            echo "infra_changed=true" >> $GITHUB_ENV
          else
            echo "infra_changed=false" >> $GITHUB_ENV
          fi

  Build_and_Deploy:
    runs-on: ubuntu-latest
    needs: wait_for_infra
    steps:
      - name: Build and Test Application
        run: |
          echo "Building and testing the application..."
          # Add your build and test commands here
            shell: bash
            working-directory: ecommerce-app/

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt pytest
        working-directory: ecommerce-app/

      - name: Run tests
        run: pytest --junitxml=reports/test-results.xml
        working-directory: ecommerce-app/

      - name: Package the application
        run: zip -r ecommerce_app.zip . -x "*.git*" "tests/*" "*.pytest_cache*" "*.DS_Store"
        working-directory: ecommerce-app/

      - name: Upload artifact
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ecommerce_app
          environment_name: "ecommerce-env"
          version_label: ${{ github.sha }}
          region: "us-east-1"
          deployment_package: "ecommerce_app.zip"

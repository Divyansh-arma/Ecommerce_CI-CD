name: "Ecommerce-app-Terraform"
on:
  push:
    branches:
      - main
      - test
    paths:
      - terraform/**
      - ecommerce-app/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
      - ecommerce-app/**

env:
  AWS_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_db_username: ${{ secrets.RDS_USER_NAME }}
  TF_VAR_db_password: ${{ secrets.RDS_PASSWORD }}

jobs:
    terraform:
        name: "Terraform code changes"
        runs-on: ubuntu-latest
        defaults:
          run:
            shell: bash
            working-directory: terraform/

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
    
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: '1.9.2'

            - name: Terraform Init
              id: terraform_init
              run: terraform init

            - name: Terraform format
              id: terraform_fmt
              run: terraform fmt -check

            - name: Terraform validate
              id: terraform_validate
              run: terraform validate

            - name: Terraform plan
              id: terraform_plan
              run: terraform plan -out=tfplan
              continue-on-error: true

            - name: Terraform plan output
              if: steps.terraform_plan.outcome == 'failure'
              run: exit 1

            - name: Terraform apply
              id: terraform_apply
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: terraform apply -auto-approve -input=false -parallelism=1 tfplan

    Build_and_Deploy:
      name: "Build and Deploy Application"
      runs-on: ubuntu-latest
      defaults:
          run:
            shell: bash

      steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt pytest
        working-directory: ecommerce-app/

      - name: Run tests
        run: pytest --junitxml=reports/test-results.xml
        working-directory: ecommerce-app/

      - name: Package the application
        run: zip -r ecommerce-app.zip . -x "*.git*" "tests/*" "*.pytest_cache*" "*.DS_Store"
        working-directory: ecommerce-app/

      - name: Upload artifact
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ecommerce-app
          environment_name: "ecommerce-env"
          version_label: ${{ github.sha }}
          region: "us-east-1"
          deployment_package: "ecommerce-app/ecommerce-app.zip"